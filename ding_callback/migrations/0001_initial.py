# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-20 23:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FlowInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('people', models.CharField(max_length=32, verbose_name='监测者')),
                ('flow_date', models.DateField(max_length=32, verbose_name='流量监测日期')),
                ('flow_time', models.TimeField(max_length=32, verbose_name='流量监测时间段')),
                ('time1', models.FloatField(max_length=32, verbose_name='监测时长1')),
                ('volume1', models.FloatField(max_length=32, verbose_name='监测水量1')),
                ('time2', models.FloatField(max_length=32, verbose_name='监测时长2')),
                ('volume2', models.FloatField(max_length=32, verbose_name='监测水量2')),
                ('time3', models.FloatField(max_length=32, verbose_name='监测时长3')),
                ('volume3', models.FloatField(max_length=32, verbose_name='监测水量3')),
                ('diameter', models.FloatField(max_length=32, verbose_name='管径')),
                ('mud_depth', models.FloatField(max_length=32, verbose_name='淤泥深度')),
                ('cicle_lequid_level1', models.FloatField(max_length=32, verbose_name='液位1')),
                ('cicle_instantaneous_flow_rate1', models.FloatField(max_length=32, verbose_name='瞬时流速1')),
                ('cicle_lequid_level2', models.FloatField(max_length=32, verbose_name='液位2')),
                ('cicle_instantaneous_flow_rate2', models.FloatField(max_length=32, verbose_name='瞬时流速2')),
                ('cicle_lequid_level3', models.FloatField(max_length=32, verbose_name='液位3')),
                ('cicle_instantaneous_flow_rate3', models.FloatField(max_length=32, verbose_name='瞬时流速3')),
                ('canal_width', models.FloatField(max_length=32, verbose_name='渠宽')),
                ('square_lequid_level1', models.FloatField(max_length=32, verbose_name='液位1')),
                ('square_instantaneous_flow_rate1', models.FloatField(max_length=32, verbose_name='瞬时流速1')),
                ('square_lequid_level2', models.FloatField(max_length=32, verbose_name='液位2')),
                ('square_instantaneous_flow_rate2', models.FloatField(max_length=32, verbose_name='瞬时流速2')),
                ('square_lequid_level3', models.FloatField(max_length=32, verbose_name='液位3')),
                ('square_instantaneous_flow_rate3', models.FloatField(max_length=32, verbose_name='瞬时流速3')),
                ('machine_flow', models.FloatField(max_length=32, verbose_name='仪器监测流量')),
            ],
        ),
        migrations.CreateModel(
            name='MonitorPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='监测点号')),
                ('geophysical_point', models.CharField(max_length=64, unique=True, verbose_name='物探点号')),
                ('is_monitor', models.IntegerField(verbose_name='是否监测')),
                ('not_monitor_reason', models.CharField(max_length=128, verbose_name='无法监测原因')),
                ('work_function', models.IntegerField(verbose_name='监测方法')),
                ('exterior_photo', models.CharField(max_length=128, verbose_name='外景照')),
                ('water_flow_photo', models.CharField(max_length=128, verbose_name='水流照')),
                ('status_photo', models.CharField(max_length=128, verbose_name='监测点现状照')),
                ('probe_photo', models.CharField(max_length=128, verbose_name='探头照')),
                ('machine_photo', models.CharField(max_length=128, verbose_name='仪器照')),
                ('setup_photo', models.CharField(max_length=128, verbose_name='仪器设置照')),
                ('work_photo', models.CharField(max_length=128, verbose_name='工作照')),
            ],
        ),
        migrations.CreateModel(
            name='SampleInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('people', models.CharField(max_length=32, verbose_name='采样者')),
                ('sample_date', models.DateField(max_length=32, verbose_name='采样日期')),
                ('sample_time', models.TimeField(max_length=32, verbose_name='采样时间段')),
                ('sample_number', models.CharField(max_length=32, verbose_name='样品编号')),
                ('sample_photo', models.CharField(max_length=128, verbose_name='样品照')),
                ('sample_color', models.CharField(max_length=32, verbose_name='样品颜色')),
                ('sample_odor', models.CharField(max_length=32, verbose_name='样品气味')),
                ('sample_turbidity', models.CharField(max_length=32, verbose_name='样品浊度')),
                ('SS', models.CharField(max_length=32, verbose_name='悬浮物')),
                ('NH3_N', models.CharField(max_length=32, verbose_name='氨氮')),
                ('TP', models.CharField(max_length=32, verbose_name='总磷')),
                ('TN', models.CharField(max_length=32, verbose_name='总氮')),
                ('COD', models.CharField(max_length=32, verbose_name='化学需氧量')),
                ('BOD', models.CharField(max_length=32, verbose_name='五日生化需氧量')),
                ('AIS', models.CharField(max_length=32, verbose_name='阴离子表面活性剂')),
                ('AFVO', models.CharField(max_length=32, verbose_name='动植物油')),
                ('DO', models.CharField(max_length=32, verbose_name='溶解氧')),
                ('FLOW', models.CharField(max_length=32, verbose_name='流量')),
                ('CR', models.CharField(max_length=32, verbose_name='透明度')),
                ('ORP', models.CharField(max_length=32, verbose_name='氧化还原电位')),
                ('SinkableS', models.CharField(max_length=32, verbose_name='易沉固体')),
                ('Sulfide', models.CharField(max_length=32, verbose_name='硫化物')),
                ('Cyanide', models.CharField(max_length=32, verbose_name='氰化物')),
                ('monitor_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample', to='ding_callback.MonitorPoint')),
            ],
        ),
        migrations.AddField(
            model_name='flowinfo',
            name='monitor_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flowinfo', to='ding_callback.MonitorPoint'),
        ),
    ]
